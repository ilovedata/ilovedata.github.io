[["index.html", "반응표면분석 서문", " 반응표면분석 서울시립대 통계학과 2021-05-25 서문 교과서 9장 반응표면분석에 대한 강의와 예제 풀이에 대한 노트입니다. 이 노트에 있는 R 프로그램을 실행하려면 다음과 같은 패키지들이 필요하다. library(dplyr) library(tidyr) library(ggplot2) library(rsm) library(scatterplot3d) library(knitr) library(kableExtra) library(equatiomatic) library(GA) "],["responseintro.html", "제 1 장 반응표면 분석 개요 1.1 실험계획의 절차 1.2 반응표본분석의 목적 1.3 반응표본분석의 절차", " 제 1 장 반응표면 분석 개요 1.1 실험계획의 절차 요인배치법의 실험 자료의 분석은 실험조건인 처리에서의 모평균 비교. 분산분석을 통하여 유의한 요인효과들을 선별 각 처리에서 예측치 구하기. 실험에서 고려된 처리조건들 중에서 모평균의 값을 최적으로 하는 실험조건 찾기 및 재현성 검토 1.2 반응표본분석의 목적 반응표면분석(response surface method)에서는 관심영역에 속한 임의의 계량인자(quantatitative factor)들의 값에서 수율(반응변수)의 예측이 실험 목적이다. 일단 반응표변분석에서는 두 개의 계량인자 \\(x_1\\), \\(x_2\\) 와 반응변수 \\(y\\) 의 모평균 \\(\\eta =E(y)\\)이 다음과 같은 함수관계를 가진다고 가정한다. \\[ \\eta = f(x_1, x_2) \\] 위의 관계에서 함수 \\(f(x_1, x_2)\\)는 모르는 함수이다. 반응표면분석의 목적은 반응변수의 모평균 \\(\\eta\\)의 최대값 \\(\\eta^*\\) 가 나타나는 계량인자의 수준 \\(x_1^*\\) 와 \\(x_2^*\\) 를 주어진 영역에서 찾는 것이다. \\[ \\eta^* = \\max_{x_1, x_2} f(x_1, x_2) =f(x_1^*, x_2^*) \\] 함수 \\(f(x_1, x_2)\\)는 복잡한 형태를 가질 수 있지만 반응표변분석에서는 최대값의 주위에서 함수 \\(f(x_1, x_2)\\)를 이차함수로 근사하여 최적점을 찾는다. 그림 1.1: 이차함수 근사 (Montgomery 2017) 1.3 반응표본분석의 절차 반응값을 나타내는 변수를 반응변수로, 계량인자를 설명변수로 간주하여 실험 자료를 이용하여 회귀분석을 실시. 관심영역의 최적조건 근처에서 곡선효과 존재 곡선효과를 반영하는 가장 간결한 모형인 이차 다항모형 가정 적절한 모형 찾기. 예측치를 최적으로 하는 최적조건을 관심영역에서 찾고, 최적조건에서의 재현성 검토하기. 반응표면분석의 절차는 다음과 같이 크게 3단계로 구성된다. 2수준 일부실시법에 의해서 핵심인자들을 선별하기. 선별된 핵심인자들에 대한 축차적인 실험 설계(중심점을 갖는 2수준 요인 배치법)와 분석에 의해서 최적조건 근처의 설명변수들의 영역 으로 이동하기. (최대경사법 적용) \\[ y = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\dots + \\beta_p x_p + e \\] 최적조건 근처에서 2차 모형을 가정, ccd(중심합성설계)에 의한 실험설계 및 실험자료의 회귀분석을 통한 적절한 모형 찾기 및 최적조 건 찾기와 재현성 검토. \\[ y = \\beta_0 + \\sum_{i=1}^k \\beta_i x_i + \\sum_{i=1}^k \\beta_{ii} x^2_i + \\underset{i&lt;j}{\\sum \\sum} \\beta_{ij} x_i x_j + e \\] 그림 1.2: 반응표면분석의 순차적인 특성 (Montgomery 2017) References "],["steepdescent.html", "제 2 장 최대경사법 2.1 개요 2.2 9.2절 자료와 변환 2.3 선형회귀식 2.4 최대경사법 2.5 패키지 rsm 2.6 변량이 3개 이상인 경우", " 제 2 장 최대경사법 2.1 개요 초기 실험에서는 실험에서 고려하는 계량인자들의 관심 영역이 반응변수의 최적값을 가지는 영역에서 멀리 떨어져 있는 경우가 흔하다. 따라서 초기 실험에서는 최적의 영역으로 이동하기 위한 계량인자들의 방향을 알아내는 것이 중요하다. 간단한 초기 실험의 결과를 이용하여 계량인자들의 값을 최적점 근처로 순차적으로 이동시킬 수 있는 쉽고 경제적인 절차가 필요하다. 주어진 선형모형에서 계량인자들의 값을 이동시킬 수 있는 간단한 방법들 중의 하나는 최대경사법(method of steepest ascent) 이다. 2.2 9.2절 자료와 변환 에를 들어 교과서 9.2 절에 나오는 실험 자료를 고려해 보자. 화학공장에서 공정의 수율(\\(y\\))을 최적화하는 공정조건을 찾는 실험자가 관심이 있는 시간(\\(x_1\\), time)의 범위는 30-40분 이고 온도(\\(x_2\\), temp)의 범위는 160-180도 라고 하자. 이제 주어진 시간과 온도에 따라서 실험을 7번 수행하였으며 결과 자료는 다음과 같다. time &lt;- c(30,30,40,40,35,35,35) temp &lt;- c(160, 180, 160, 180, 170, 170, 170) y &lt;- c(72.5, 74.2, 76.3, 77.0, 74.8, 75.6, 75.2) df1 &lt;- data.frame(time=time, temp=temp, y=y) df1 %&gt;% kbl(caption = &#39;교과서 9.2절 실험자료&#39;) %&gt;% kable_styling(bootstrap_options = &quot;striped&quot;, full_width = F, position = &quot;center&quot;) 표 2.1: 교과서 9.2절 실험자료 time temp y 30 160 72.5 30 180 74.2 40 160 76.3 40 180 77.0 35 170 74.8 35 170 75.6 35 170 75.2 반응표면분석에서는 고려하는 변량의 범위를 \\((-1,1)\\) 로 변환하는 작업을 먼저 수행한다. 위의 자료에서 시간과 온도의 범위를 \\((-1,1)\\)로 변환하기 위하여 다음과 같은 식을 적용한다. \\[ x_1 = \\frac{\\text{time} - 35}{5}, \\quad x_2 = \\frac{\\text{temp} - 170}{10} \\] 위와 같은 변환은 패키지 rsm 에 있는 함수 coded.data를 사용해서 쉽게 수행할 수 있다. df11 &lt;- coded.data(df1, x1 ~ (time - 35)/5, x2 ~ (temp - 170)/10) class(df11) ## [1] &quot;coded.data&quot; &quot;data.frame&quot; df11 ## time temp y ## 1 30 160 72.5 ## 2 30 180 74.2 ## 3 40 160 76.3 ## 4 40 180 77.0 ## 5 35 170 74.8 ## 6 35 170 75.6 ## 7 35 170 75.2 ## ## Data are stored in coded form using these coding formulas ... ## x1 ~ (time - 35)/5 ## x2 ~ (temp - 170)/10 위에서 변환된 자료 df11 는 변환된 이름 x1 과 x2 로 자료가 저장되어 있지만 원래 변수의 이름 time 과 temp 도 특정한 함수에서 사용이 가능한다. 9.2 장 자료에서 7번 실험을 수행하는 경우 고려한 실험점(experiment point)은 정사각형의 각 꼭지점에서 하나의 관측값을 얻고 중심점 \\((0,0)\\) 에서 3개의 실험값을 얻었다. df11 %&gt;% ggplot(aes(time, temp)) + geom_point(colour = &quot;red&quot;, size = 2) + theme_bw() df11 %&gt;% ggplot(aes(x1, x2)) + geom_point(colour = &quot;red&quot;, size = 2) + theme_bw() 그림 2.1: 실험점의 배치 변환된 자료 x1 과 x2 의 값으로 부터 원래 자료의 값을 얻는 방법은 함수 code2val()을 사용한다. 예를 들어 x1 = 0.5 , x2 = 0.0 으로 코딩된 원래 자료 time 과 temp 의 값은 다음과 같이 얻을 수 있다. code2val(data.frame(x1 = c(0.5), x2 = c(0.0)), codings(df11)) ## time temp ## 1 37.5 170 2.3 선형회귀식 다음은 반응변수 \\(y\\) 를 에측하는 모형으로 두 개의 변량인자 \\(x_1\\)과 \\(x_2\\) 를 가지는 다음과 같은 일차선형 모형을 고려하자. \\[\\begin{equation} y = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + e \\tag{2.1} \\end{equation}\\] 주어진 자료를 이용하여 위의 일차선형 모형의 회귀계수들을 추정하면 반응변수의 평균 \\(E(y|x)\\) 에 대한 다음과 같은 예측식을 얻을 수 있다. \\[\\begin{equation} \\widehat {E(y|x)} = \\hat y = \\hat \\beta_0 + \\hat \\beta_1 x_1 + \\hat \\beta_2 x_2 \\tag{2.2} \\end{equation}\\] 변환된 \\(x_1\\) 과 \\(x_2\\) 가 저장된 데이터 프레임 df11 에 있는 자료를 이용하여 일차선형 모형을 적합한 결과는 다음과 같다. lmdf11 &lt;- lm(y ~ x1 + x2, data=df11) equatiomatic::extract_eq(lmdf11, intercept = &quot;beta&quot;, use_coefs = TRUE) \\[ \\operatorname{\\widehat{y}} = 75.09 + 1.65(\\operatorname{x1}) + 0.6(\\operatorname{x2}) \\] 예측식 (2.2) 를 3차원 공간에 표시하면 다음과 같은 평면으로 나타나게 된다. 패키지 scatterplot3d 의 함수 scatterplot3d()를 이용하여 3차원 산포도와 추정된 선형식을 그릴 수 있다. s3d &lt;- scatterplot3d(as.data.frame(df11), type = &quot;h&quot;, color = &quot;blue&quot;, angle=55, pch = 16, xlab=&quot;x1&quot;, ylab=&quot;x2&quot;) s3d$plane3d(lmdf11) 그림 2.2: 일차 선형식 위에서 적합된 예측식 (2.2) 을 함수 contour.lm()을 이용하여 등고선 그림으로 나타내면 다음 그림과 같다. contour.lm(lmdf11, x2~x1, labcex=1.4 ) points(c(-1,-1,1,1, 0), c(-1,1,-1,1,0), col=&quot;blue&quot;, cex=1.3, pch=19) 그림 2.3: 일차 선형식 2.4 최대경사법 이제 반응변수의 변화에 대한 선형 예측식이 (2.2) 로 주어진 경우 반응변수가 가장 크게 증가하는 방향을 2차원 공간 \\((x_1, x_2)\\)에서 찾아보자. 이렇게 공간에서 다변량 함수의 변화가 가장 크게 변하는 방향을 찾는 방법을 최대경사법(method of steepest ascent)이라고 부르며 이는 기울기 하강법(gradient descent method)의 반대 방법이다. 이변량 함수 \\(f(x_1, x_2)\\) 에 대한 기울기 벡터(gradient) \\(\\nabla f\\)는 다음과 같이 각 축에 대한 부분 미분(partial derivative)로 이루어진 벡터이다. \\[\\begin{equation*} \\nabla f = \\nabla f (x_1, x_2) = \\begin{bmatrix} \\pardiff{f(x_1, x_2)}{x_1} \\\\ \\pardiff{f(x_1, x_2)}{x_2} \\end{bmatrix} \\end{equation*}\\] 기울기 벡터 \\(\\nabla f\\) 에 대한 기하학적 의미는 다음과 같은 그림으로 나타낼 수 있으며 \\(\\nabla f\\)는 주어진 점에서 함수 \\(f\\)가 가장 빨리 증가하는 방향을 의미한다. 따라서 기울기 벡터 \\(\\nabla f\\) 를 최대 경사(steepest ascent) 벡터라고 부른다. 그림 2.4: 기울기 벡터의 기하학적 의미 선형 예측식 (2.2) 이 주어진 경우 2차원 공간 \\((x_1, x_2)\\)에서 반응변수가 가장 크게 증가하는 방향, 즉 최대경사 방향 \\(\\nabla f\\) 은 다음과 같이 주어진다. \\[\\begin{equation} \\nabla f = \\begin{bmatrix} \\pardiff{f(x_1, x_2)}{x1} \\\\ \\pardiff{f(x_1, x_2)}{x2} \\\\ \\end{bmatrix} = \\begin{bmatrix} \\pardiff{(\\hat \\beta_0 + \\hat \\beta_1 x_1 + \\hat \\beta_2 x_2)}{x_1} \\\\ \\pardiff{(\\hat \\beta_0 + \\hat \\beta_1 x_1 + \\hat \\beta_2 x_2)}{x_2} \\end{bmatrix} = \\begin{bmatrix} \\hat \\beta_1 \\\\ \\hat \\beta_2 \\end{bmatrix} \\tag{2.3} \\end{equation}\\] 따라서 9.2절의 실험자료에 대하여 적합한 모형식을 이용하면 최대경사 벡터 \\(\\nabla f\\) 는 다음과 같이 주어진다. \\[\\begin{equation} \\nabla f = \\begin{bmatrix} 1.65 \\\\ 0.06 \\end{bmatrix} \\tag{2.4} \\end{equation}\\] 위의 최대경사 벡터 \\(\\nabla f\\)은 적합한 모형식에서 \\(x_1\\)과 \\(x_2\\) 가 1 단위 만큼 증가할 때 반응변수의 변화를 나타내는 회귀계수 \\(\\hat \\beta_1\\), \\(\\hat \\beta_2\\)의 방향을 의미한다. coef(lmdf11) ## (Intercept) x1 x2 ## 75.085714 1.650000 0.600000 식 (2.4)에 나타난 최대경사 벡터 \\(\\nabla f\\)을 등고선 그림에 나타내면 다음과 같다. 아래의 등고선에서 최대경사 방향은 기울기가 \\(0.6/1.65=0.364\\) 를 가진 원점을 지나는 직선 방향이다. contour.lm(lmdf11, x2~x1, xlabs=c( &quot;x2&quot;, &quot;x1&quot;), bounds = list(x1 = c(-3, 3), x2 = c(-3, 3))) points(c(-1,-1,1,1, 0), c(-1,1,-1,1,0), col=&quot;blue&quot;, cex=1.3, pch=19) slope &lt;- as.numeric( coef(lmdf11)[&quot;x2&quot;] / coef(lmdf11)[&quot;x1&quot;]) slope ## [1] 0.36363636 lines(x=c(0,1), y=c(0,slope ), col=&quot;red&quot;) abline(h=0, lty=2) abline(v=0, lty=2) 그림 2.5: 일차 선형식(빨간선이 최대경사 방향) 최대경사 벡터를 구하는 경우 벡터의 길이가 1 이 되도록 하는 경우도 있다. 이러한 경우의 최대경사 방향의 벡터는 다음과 같다. \\[\\begin{equation} \\begin{bmatrix} 1.65/\\sqrt{1.65^2 + 0.06^2} \\\\ 0.60 \\sqrt{1.65^2 + 0.06^2} \\\\ \\end{bmatrix} = \\begin{bmatrix} 0.9398 \\\\ 0.3417 \\end{bmatrix} \\tag{2.5} \\end{equation}\\] radi &lt;- sqrt(sum(c(coef(lmdf11)[&quot;x1&quot;], coef(lmdf11)[&quot;x2&quot;])^2)) c(coef(lmdf11)[&quot;x1&quot;], coef(lmdf11)[&quot;x2&quot;])/radi ## x1 x2 ## 0.93979342 0.34174306 2.5 패키지 rsm 위에서 언급한 분석을 포함한 다양한 반응표면 분석은 패키지 rsm 에 있는 여러 가지 함수를 이용하여 쉽게 수행할 수 있다. 2.5.1 일차 선형식의 적합 먼저 일차 선형식 (2.1) 을 적합하는 경우 함수 rsm() 을 다음과 같이 사용할 수 있다. 모형식에서 FO(x1, x2) 는 2개의 변수 x1 과 x2 로 구성된 일차선형식(FO; First Order function)를 사용하는 것을 의미한다. rsmdf1 &lt;- rsm(y ~ FO(x1, x2), data = df11) summary(rsmdf1) ## ## Call: ## rsm(formula = y ~ FO(x1, x2), data = df11) ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 75.085714 0.151017 497.20054 9.8178e-11 *** ## x1 1.650000 0.199777 8.25922 0.0011725 ** ## x2 0.600000 0.199777 3.00335 0.0398101 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Multiple R-squared: 0.95076, Adjusted R-squared: 0.92614 ## F-statistic: 38.617 on 2 and 4 DF, p-value: 0.0024246 ## ## Analysis of Variance Table ## ## Response: y ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## FO(x1, x2) 2 12.33000 6.16500 38.61745 0.0024246 ## Residuals 4 0.63857 0.15964 ## Lack of fit 2 0.31857 0.15929 0.99554 0.5011186 ## Pure error 2 0.32000 0.16000 ## ## Direction of steepest ascent (at radius 1): ## x1 x2 ## 0.93979342 0.34174306 ## ## Corresponding increment in original units: ## time temp ## 4.6989671 3.4174306 위의 함수 rsm()에서 얻은 결과는 선형모형을 적합하는 함수 lm() 의 결과에 추가적은 분석 결과가 포함된다. 추가 분석에 대한 설명은 다음과 같다. Analysis of Variance Table 는 일반적인 분산분석표에 2차 반응표면 함수의 각 부분에 대한 유의성 F-검정이 주어진다. 반복이 있는 경우 적합성결여 검정(lack of fit test)이 주어지며 해당하는 p-값이 유의수준 \\(\\alpha\\) 보다 작으면 모형의 적합성에 문제가 있다는 의미이다. 위의 결과에서는 분산분석에서 Lack of fit 에 대한 p-값이 0.5011 이므로 선형모형의 적합성에는 큰 문제가 없다. Direction of steepest ascent (at radius 1) 부분에서는 길이가 1 인 최대경사 벡터 \\(\\nabla f\\)를 구해준다. Corresponding increment in original units 부분에서는 최대경사 벡터를 원래 변환되기 전의 자료의 단위로 구해준다. 2.5.2 등고선 그림 반응 표면의 등고선 그림은 함수 rsm() 의 적합 결과를 이용하여 contour() 함수를 사용하면 쉽게 그릴 수 있다. contour(rsmdf1, ~ x1 + x2) contour(rsmdf1, ~ x1 + x2, image = TRUE) 그림 2.6: rsm 결과를 이용한 등고선 그림 2.5.3 최적 실험점 탐색 이제 실험 원점 \\((0,0)\\) 에서 최대경사 벡터 \\(\\nabla f\\) 방향으로 여러 개의 실험점을 계산하려면 함수 steepest()를 사용한다. 아래의 함수에서 dist=seq(0,5, by=1) 는 최대경사 벡터 방향으로 길이가 1 만큼 증가하면서 길이가 5인 점까지 실험점을 구하라는 의미이다. deltapoints &lt;- steepest(rsmdf1, dist=seq(0,5, by=1)) ## Path of steepest ascent from ridge analysis: deltapoints ## dist x1 x2 | time temp | yhat ## 1 0 0.000 0.000 | 35.000 170.00 | 75.086 ## 2 1 0.940 0.342 | 39.700 173.42 | 76.842 ## 3 2 1.880 0.683 | 44.400 176.83 | 78.598 ## 4 3 2.819 1.025 | 49.095 180.25 | 80.352 ## 5 4 3.759 1.367 | 53.795 183.67 | 82.108 ## 6 5 4.699 1.709 | 58.495 187.09 | 83.864 위에서 구한 실험점들을 등고선 그림에 표시하면 다음과 같다. contour(rsmdf1, ~ x1 + x2, bounds = list(x1 = c(-3, 3), x2 = c(-3, 3))) points(deltapoints$time, deltapoints$temp, cex=1.2, col=&quot;red&quot;, pch=19) 그림 2.7: 최대경사 벡터 방향의 실험점 2.6 변량이 3개 이상인 경우 heli ## block A R W L ave logSD ## 1 1 11.8 2.26 1.00 1.5 367 72 ## 2 1 13.0 2.26 1.00 1.5 369 72 ## 3 1 11.8 2.78 1.00 1.5 374 74 ## 4 1 13.0 2.78 1.00 1.5 370 79 ## 5 1 11.8 2.26 1.50 1.5 372 72 ## 6 1 13.0 2.26 1.50 1.5 355 81 ## 7 1 11.8 2.78 1.50 1.5 397 72 ## 8 1 13.0 2.78 1.50 1.5 377 99 ## 9 1 11.8 2.26 1.00 2.5 350 90 ## 10 1 13.0 2.26 1.00 2.5 373 86 ## 11 1 11.8 2.78 1.00 2.5 358 92 ## 12 1 13.0 2.78 1.00 2.5 363 112 ## 13 1 11.8 2.26 1.50 2.5 344 76 ## 14 1 13.0 2.26 1.50 2.5 355 69 ## 15 1 11.8 2.78 1.50 2.5 370 91 ## 16 1 13.0 2.78 1.50 2.5 362 71 ## 17 1 12.4 2.52 1.25 2.0 377 51 ## 18 1 12.4 2.52 1.25 2.0 375 74 ## 19 2 11.2 2.52 1.25 2.0 361 111 ## 20 2 13.6 2.52 1.25 2.0 364 93 ## 21 2 12.4 2.00 1.25 2.0 355 100 ## 22 2 12.4 3.04 1.25 2.0 373 80 ## 23 2 12.4 2.52 0.75 2.0 361 71 ## 24 2 12.4 2.52 1.75 2.0 360 98 ## 25 2 12.4 2.52 1.25 1.0 380 69 ## 26 2 12.4 2.52 1.25 3.0 360 74 ## 27 2 12.4 2.52 1.25 2.0 370 86 ## 28 2 12.4 2.52 1.25 2.0 368 74 ## 29 2 12.4 2.52 1.25 2.0 369 89 ## 30 2 12.4 2.52 1.25 2.0 366 76 ## ## Data are stored in coded form using these coding formulas ... ## x1 ~ (A - 12.4)/0.6 ## x2 ~ (R - 2.52)/0.26 ## x3 ~ (W - 1.25)/0.25 ## x4 ~ (L - 2)/0.5 heli.rsm &lt;- rsm(ave ~ FO(x1, x2, x3, x4), data = heli) summary(heli.rsm) ## ## Call: ## rsm(formula = ave ~ FO(x1, x2, x3, x4), data = heli) ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 366.5000000 1.4373587 254.98159 &lt; 2.22e-16 *** ## x1 -0.0833333 1.6070159 -0.05186 0.95905560 ## x2 5.0833333 1.6070159 3.16321 0.00406592 ** ## x3 0.2500000 1.6070159 0.15557 0.87762298 ## x4 -6.0833333 1.6070159 -3.78548 0.00085771 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Multiple R-squared: 0.49354, Adjusted R-squared: 0.41251 ## F-statistic: 6.0907 on 4 and 25 DF, p-value: 0.0014529 ## ## Analysis of Variance Table ## ## Response: ave ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## FO(x1, x2, x3, x4) 4 1510.000 377.500 6.09067 0.0014529 ## Residuals 25 1549.500 61.980 ## Lack of fit 20 1458.667 72.933 4.01468 0.0646456 ## Pure error 5 90.833 18.167 ## ## Direction of steepest ascent (at radius 1): ## x1 x2 x3 x4 ## -0.010505964 0.640863793 0.031517891 -0.766935359 ## ## Corresponding increment in original units: ## A R W L ## -0.0063035783 0.1666245863 0.0078794729 -0.3834676797 par(mfrow = c(2, 3)) contour(heli.rsm, ~ x1 + x2 + x3 + x4) steepest(heli.rsm) ## Path of steepest ascent from ridge analysis: ## dist x1 x2 x3 x4 | A R W L | yhat ## 1 0.0 0.000 0.000 0.000 0.000 | 12.4000 2.52000 1.25000 2.0000 | 366.500 ## 2 0.5 -0.005 0.320 0.016 -0.383 | 12.3970 2.60320 1.25400 1.8085 | 370.461 ## 3 1.0 -0.011 0.641 0.032 -0.767 | 12.3934 2.68666 1.25800 1.6165 | 374.433 ## 4 1.5 -0.016 0.961 0.047 -1.150 | 12.3904 2.76986 1.26175 1.4250 | 378.394 ## 5 2.0 -0.021 1.282 0.063 -1.534 | 12.3874 2.85332 1.26575 1.2330 | 382.366 ## 6 2.5 -0.026 1.602 0.079 -1.917 | 12.3844 2.93652 1.26975 1.0415 | 386.327 ## 7 3.0 -0.032 1.923 0.095 -2.301 | 12.3808 3.01998 1.27375 0.8495 | 390.299 ## 8 3.5 -0.037 2.243 0.110 -2.684 | 12.3778 3.10318 1.27750 0.6580 | 394.260 ## 9 4.0 -0.042 2.563 0.126 -3.068 | 12.3748 3.18638 1.28150 0.4660 | 398.227 ## 10 4.5 -0.047 2.884 0.142 -3.451 | 12.3718 3.26984 1.28550 0.2745 | 402.193 ## 11 5.0 -0.053 3.204 0.158 -3.835 | 12.3682 3.35304 1.28950 0.0825 | 406.160 "],["secondorder.html", "제 3 장 2차 반응표면 3.1 개요 3.2 2차 다항 모형 3.3 이차 반응표면의 모양 3.4 최적점과 정상점 3.5 2차 다항식의 표현", " 제 3 장 2차 반응표면 3.1 개요 여러번의 간단한 실험을 순차적으로 수행하면서 1차모형과 최대경사법을 이용하여 최적점 근처로 실험점을 이동한다. 최적조건 근처의 영역에서는 반응표면모형의 모형으로 곡선효과가 고려된 2차 다항 모형을 가정하고 최적점을 찾는다. 3.2 2차 다항 모형 이제 반응변수 \\(y\\)의 변화(반응표면; response surface)를 \\(k\\) 개의 독립변수 \\(x_1, x_2, \\cdots, x_k\\) 로 이루어진 2차 다항식(second polynomial function)으로 적합하는 2차 다항 모형을 고려하자. \\[\\begin{equation} y = \\beta_0 + \\sum_{i=1}^{k} \\beta_i x_i + \\sum_{i=1}^{k} \\beta_{ii} x^2_i + \\underset{i&lt;j}{\\sum \\sum} \\beta_{ij} x_i x_j +e \\tag{3.1} \\end{equation}\\] 반응표면분석에서 고려한 2차 다항 모형에서는 독립변수의 값들이 모두 \\([-1,1]\\) 사이에 있다고 가정하자. 3.3 이차 반응표면의 모양 예를 들어 독립변수가 두 개인 경우 다음과 같은 2차 다항 모형이 된다. \\[\\begin{equation} y = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\beta_{11} x_1^2 + \\beta_{22} x_2^2 + \\beta_{12} x_1 x_2 + e \\tag{3.2} \\end{equation}\\] 독립변수가 두 개인 경우 2차 다항 모형 (3.2) 은 다음 그림과 같이 다양한 반응 표면을 가질 수 있다. 그림 3.1: 이차 반응표면의 모양- 표면그림과 등고선 3.4 최적점과 정상점 2차 다항모형 (3.1)을 반응표면 분석에 사용하는 이유는 반응변수의 값이 최대가 되는 독립변수들의 값을 구하기 위함이다. 이렇게 반응변수의 값이 최대가 되는 독립변수들의 값을 최적점(optimum point) 라고 부른다. 최적점을 찾는 방법은 2차 다항모형 (3.1)을 각 독립변수로 미분한 식을 0으로 놓고 방정식을 푸는 것이다. 최적점을 찾는 방법을 좀 더 체계적으로 구성하기 위하여 2차 다항모형 (3.1) 을 벡터와 행렬로 나타내어 보자. 먼저 자료를 이용하여 2차 다항모형 (3.1) 에 나타난 계수들을 추정한 후 반응변수의 예측식을 다음과 같이 나타낼 수 있다. 아래의 식에서 \\(b_0,b_{i}, b_{ii}, b_{ij}\\) 는 각각 회귀계수 \\(\\beta_0, \\beta_{i}, \\beta_{ii}, \\beta_{ij}\\) 의 추정값이라고 하자. \\[\\begin{equation} \\hat y = b_0 + \\sum_{i=1}^{k} b_i x_i + \\sum_{i=1}^{k} b_{ii} x^2_i + \\underset{i&lt;j}{\\sum \\sum} b_{ij} x_i x_j \\tag{3.3} \\end{equation}\\] 이제 추정식 (3.3) 를 다음과 같이 벡터와 행렬로 나타내자. \\[\\begin{equation} \\hat y = b_0 + {\\bm x}^t \\bm b + {\\bm x}^t \\bm B {\\bm x} \\tag{3.4} \\end{equation}\\] 여기서 \\(k \\times 1\\) 차원의 독립변수 벡터 \\(\\bm x\\), \\(k \\times 1\\) 차원의 1차 계수 벡터 \\(\\bm b\\), \\(k \\times K\\) 차원의 2차 계수 행렬 \\(\\bm B\\) 는 다음과 같이 주어진다. 여기서 2차 계수 행렬 \\(\\bm B\\) 는 대칭행렬이며 비대각 원소는 계수 \\(b_{ij}\\)의 반 값임을 유의하자. \\[\\begin{equation} \\bm x = \\begin{bmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_k \\end{bmatrix} , \\quad \\bm b = \\begin{bmatrix} b_1 \\\\ b_2 \\\\ \\vdots \\\\ b_k \\end{bmatrix}, \\quad \\bm B = \\begin{bmatrix} b_{11} &amp; \\frac{b_{12}}{2} &amp; \\frac{b_{13}}{2} &amp; \\dots &amp; \\frac{b_{1k}}{2} \\\\ \\frac{b_{12}}{2} &amp; b_{22} &amp; \\frac{b_{23}}{2} &amp; \\dots &amp; \\frac{b_{2k}}{2} \\\\ \\frac{b_{13}}{2} &amp; \\frac{b_{23}}{2} &amp; b_{33} &amp; \\dots &amp; \\frac{b_{3k}}{2} \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots \\\\ \\frac{b_{1k}}{2} &amp; \\frac{b_{2k}}{2} &amp; \\frac{b_{3k}}{2} &amp; \\dots &amp; b_{kk} \\end{bmatrix} \\tag{3.5} \\end{equation}\\] 이제 정삼점을 찿는 방법은 2차 다항 에측식 (3.3) 를 각 독립변수 \\(x_i\\) 로 미분한 식을 0으로 놓은 방정식을 풀면 된다. \\[\\begin{equation} \\pardiff{\\hat y}{x_i} = b_i + 2 b_{ii} x_i + \\sum_{j \\ne i} b_{ij} x_j =0, \\quad i=1,2,\\cdots, k \\tag{3.6} \\end{equation}\\] 방정식 (3.6) 을 벡터식으로 표시하면 다음과 같은 벡터 방정식을 얻는다. \\[\\begin{equation} \\pardiff{\\hat y}{\\bm x} = \\bm b + 2 {\\bm B} \\bm x = \\bm 0 \\tag{3.6} \\end{equation}\\] 벡터 방정식 (3.6) 을 만족하는 벡터 \\({\\bm x}^*\\) 를 정상점(stationary point) 라고 부르며 정상점 \\({\\bm x}^* = (x_1^*, x_2^*, \\cdots, x_k^*)^t\\) 는 다음과 같이 얻어진다. \\[\\begin{equation} {\\bm x}^* = - \\frac{1}{2} {\\bm B}^{-1} \\bm b \\tag{3.7} \\end{equation}\\] 식 (3.7) 에 주어진 정상점 \\({\\bm x}^*\\) 은 행렬 \\(\\bm B\\) 의 성질에 따라서 반응값을 최대로 하는 최적점일 수도 있고 아닐 수도 있다. 다음 절에서는 정상점이 최적점일 조건을 살펴보기로 하자. 3.5 2차 다항식의 표현 앞 절에서 보았듯이 정상점 \\({\\bm x}^*\\) 은 추정된 2차 다항식에 대하여 미분방정식 (3.7) 을 만족하는 점이다. 2차 다항식은 그림 3.1 처럼 다양한 모양을 가진다. 실험의 목적이 반응변수를 최대로 하는 최적점을 찾는 것이기 떄문에 2차 다항식의 모양이 산 모양이면 정상점이 최적점이 되지만 다른 형태이면 최적점이 아니다. 정상점 \\({\\bm x}^*\\) 이 최적점이 될 조건은 행렬 \\(\\bm B\\)에 대한 정준분석(canonical analysis)를 통하여 파악할 수 있다. 정준분석은 행령의 고유값(eigen value)과 고유벡터(eigen vector) 를 통하여 이루어진다. 이 절에서는 정분분석을 하기 위하여 2차 다항식을 다루기 쉬운 형식으로 표현하고자 한다. 식 (3.7) 의 정상점 \\({\\bm x}^*\\) 을 중심으로 하는 축 \\(\\bm z\\) 를 다음과 같이 고려하고 \\[ \\bm z = \\bm x - {\\bm x}^* \\quad \\text{ equivalently} \\quad \\bm x = {\\bm x}^* + \\bm z \\] 2차 다항식 (3.4) 를 다음과 같이 \\(\\bm z\\) 의 함수로 변환해 보자. 아래 식에서 정상점 \\({\\bm x}^* = -{\\bm B}^{-1} \\bm b/2\\) 이다. \\[\\begin{align*} \\hat y &amp; = b_0 + {\\bm x}^t \\bm b + {\\bm x}^t \\bm B {\\bm x} \\\\ &amp; = b_0 + {\\bm x}^t \\bm b + ({\\bm x}^* + \\bm z )^t \\bm B ({\\bm x}^* + \\bm z ) \\\\ &amp; = b_0 + {\\bm x}^t \\bm b + 2 {\\bm x}^{*t} \\bm B \\bm z + {\\bm x}^{*t} \\bm B {\\bm x}^{*} + {\\bm z}^t \\bm B {\\bm z} \\\\ &amp; = b_0 + {\\bm x}^t \\bm b - {\\bm b}^t {\\bm B}^{-1} \\bm B \\bm z +\\frac{1}{4} {\\bm b}^t {\\bm B}^{-1} \\bm B {\\bm B}^{-1} {\\bm b} + {\\bm z}^t \\bm B {\\bm z} \\\\ &amp; = b_0 + {\\bm x}^t \\bm b - {\\bm b}^t \\bm z +\\frac{1}{4} {\\bm b}^t {\\bm B}^{-1}{\\bm b} + {\\bm z}^t \\bm B {\\bm z} \\\\ &amp; = b_0 + ({\\bm x}^* + \\bm z)^t \\bm b - {\\bm b}^t \\bm z +\\frac{1}{4} {\\bm b}^t {\\bm B}^{-1}{\\bm b} + {\\bm z}^t \\bm B {\\bm z} \\\\ &amp; = b_0 + ( {\\bm z}^t \\bm b - {\\bm b}^t \\bm z) + {\\bm x}^{*t} \\bm b +\\frac{1}{4} {\\bm b}^t {\\bm B}^{-1}{\\bm b} + {\\bm z}^t \\bm B {\\bm z} \\\\ &amp; = b_0 + 0 - \\frac{1}{2} {\\bm b}^t {\\bm B}^{-1}{\\bm b} +\\frac{1}{4} {\\bm b}^t {\\bm B}^{-1}{\\bm b} + {\\bm z}^t \\bm B {\\bm z} \\\\ &amp; = \\left [ b_0 - \\frac{1}{4} {\\bm b}^t {\\bm B}^{-1}{\\bm b} \\right ] + {\\bm z}^t \\bm B {\\bm z} \\tag{3.8} \\end{align*}\\] 위의 식에서 \\(\\bm z= 0\\) 인 점은 원래의 측으로 보면 정상점 \\(\\bm x ={\\bm x}^*\\) 이다. 정상점에서의 반응변수의 예측값을 \\(\\hat y_s\\) 라고 하면 \\[ \\hat y_s = b_0 + {\\bm x}^{*t} \\bm b + {\\bm x}^{*t} \\bm B {\\bm x}^* = b_0 - \\frac{1}{4} {\\bm b}^t {\\bm B}^{-1}{\\bm b} \\] 따라서 2차 다항식의 예측식 (3.4) 은 변수 \\(\\bm z = \\bm x - {\\bm x}^*\\) 으로 다음과 같이 나타낼 수 있다. \\[\\begin{equation} \\hat y = \\hat y_s + {\\bm z}^t \\bm B {\\bm z} \\tag{3.9} \\end{equation}\\] "],["canonocal.html", "제 4 장 2차모형의 정준분석 4.1 개요 4.2 이차형식 4.3 2차 다항식의 정준형식 4.4 예제: 2개의 독립 변수", " 제 4 장 2차모형의 정준분석 4.1 개요 여러번의 간단한 실험을 순차적으로 수행하면서 1차모형과 최대경사법을 이용하여 최적점 근처로 실험점을 이동한다. 최적조건 근처의 영역에서는 반응표면모형의 모형으로 곡선효과가 고려된 2차 다항 모형을 가정하고 최적점을 찾는다. 2차 다항 모형은 계수의 추정치에 따라서 반응표면의 모양을 4가지 모양으로 크게 분류하할 수 있다. 추정된 2차 모형이 어떤 모양에 해당하는지 판단할 수 있는 기법인 정준분석(canonocal analysis)을 적용한다. 4.2 이차형식 임의의 벡터 \\(\\bm x\\)에 대하여 차원이 \\(k \\times k\\) 인 대칭 행렬 \\(\\bm B\\) 이 주어진 경우 이차형식(quadratic form) \\(s(\\bm x, \\bm B)\\)는 다음과 같이 정의된다. \\[\\begin{equation} s(\\bm x, \\bm B) = {\\bm x}^t \\bm B \\bm x \\tag{4.1} \\end{equation}\\] 만약 행렬 \\(\\bm B\\)의 고유값이 다음과 같고 \\[ \\lambda_1 ,\\lambda_2 , \\dots , \\lambda_k \\] 이에 대응하는 고유벡터가 다음과 같다고 하자. \\[ \\bm q_1, \\bm q_2 , \\cdots , \\bm q_k \\] 자세한 고유값과 고유젝터에 대한 이론은 부록을 참조하자. 대칭 행렬 \\(\\bm B\\)의 고유값과 고유벡터를 이용하면 다음과 같은 스펙트럴 분해(spectral decomposition)가 가능하다 (부록 참조). \\[\\begin{equation} \\bm B = \\bm Q \\bm \\Lambda {\\bm Q}^t = \\lambda_1 \\bm q_1 \\bm q_1^t + \\lambda_2 \\bm q_2 \\bm q_2^t + \\cdots + \\lambda_k \\bm q_k \\bm q_1^k \\tag{4.2} \\end{equation}\\] 이제 식 (4.1) 에서 정의된 이차형식은 스펙트럴 분해를 이용하여 다음과 같은 분해가 가능하다. \\[\\begin{align} s(\\bm x, \\bm B) &amp; = {\\bm x}^t \\bm B \\bm x \\notag \\\\ &amp; = {\\bm x}^t \\bm Q \\bm \\Lambda {\\bm Q}^t \\bm x \\notag \\\\ &amp;= {\\bm x}^t \\left [ \\lambda_1 \\bm q_1 \\bm q_1^t + \\lambda_2 \\bm q_2 \\bm q_2^t + \\cdots + \\lambda_k \\bm q_k \\bm q_1^k \\right ] \\bm x \\notag \\\\ &amp; = \\sum_{i=1}^k \\lambda_i ( {\\bm x}^t \\bm q_i) (\\bm q_i^t \\bm x) \\notag \\\\ &amp; = \\sum_{i=1}^k \\lambda_i w_i^2 \\tag{4.3} \\end{align}\\] 여기서 \\[ w_i = {\\bm x}^t \\bm q_i = \\bm q_i^t \\bm x, \\quad i=1,2,\\dots, k \\] 4.3 2차 다항식의 정준형식 앞 절에서 논의한 것을 정리하면 2차 다항식의 예측식 (3.4) 은 변수 \\(\\bm z = \\bm x - {\\bm x}^*\\) 으로 다음과 같이 나타낼 수 있다. \\[\\begin{align} \\hat y &amp; = \\hat y_s + {\\bm z}^t \\bm B {\\bm z} \\notag \\\\ &amp; = \\hat y_s + \\lambda_1 w_1^2 + \\lambda_2 w_2^2 + \\cdots + \\lambda_k w_k^2 \\tag{4.4} \\end{align}\\] 여기서 \\[w_i = {\\bm z}^t \\bm q_i = \\bm q_i^t \\bm z, \\quad i=1,2,\\dots, k \\] \\[ \\hat y_s = b_0 - \\frac{1}{4} {\\bm b}^t {\\bm B}^{-1}{\\bm b} \\] 위의 식 (4.4) 을 2차 다항식의 정준형식(canonical form) 이라고 부른다. 4.4 예제: 2개의 독립 변수 만약 독립변수가 2개 있는 2차 다항 모형에서는 행렬 \\(\\bm B\\)의 차원은 \\(2 \\times 2\\)이다. 따라서 행렬 \\(\\bm B\\)의 고유치는 \\(\\lambda_1\\) 과 \\(\\lambda_2\\) 라고 하자. 이 경우는 2차 형식이 다음과 같이 분해될 수 있다. \\[ s(\\bm x, \\bm B) = \\lambda_1 w_1^2 + \\lambda_2 w_2^2 \\] 위의 2차 형식을 계산하는 함수를 R 로 만들어 보자. quad &lt;- function(w1, w2, l1, l2){ l1*w1^2 + l2*w2^2 } \\(\\lambda_1 &lt; \\lambda_2 &lt; 0\\) 의 경우 이차형식 \\(s(\\bm x, \\bm B)\\) 는 정상점이 최대 반응점이 되며 \\(w_2\\) 에 비하여 \\(w_1\\) 축으로 반응의 변화가 급하다. \\(\\lambda_1 =-4\\), \\(\\lambda_2 =-1\\) 인 경우 2차 형식의 형태는 다음과 같다. w1 &lt;- w2 &lt;- seq(-1, 1, length= 30) s &lt;- outer(w1, w2 ,quad, -4, -1) persp3D(w1, w2, s, main=&quot;이차형식: l1 &lt; l2 &lt; 0&quot;, zlab = &quot;s&quot;, theta = 30, phi = 15) \\(\\lambda_1 &gt; \\lambda_2 &gt; 0\\) 의 경우 이차형식 \\(s(\\bm x, \\bm B)\\) 는 정상점이 최소 반응점이 되며 \\(w_2\\) 에 비하여 \\(w_1\\) 축으로 반응의 변화가 급하다. \\(\\lambda_1 =2\\), \\(\\lambda_2 =1\\) 인 경우 2차 형식의 형태는 다음과 같다. w1 &lt;- w2 &lt;- seq(-1, 1, length= 30) s &lt;- outer(w1, w2 ,quad, 3, 1) persp3D(w1, w2, s, main=&quot;이차형식: l1 &gt; l2 &gt; 0&quot;, zlab = &quot;s&quot;, theta = 40, phi = 20) \\(\\lambda_1 &gt;0\\), \\(\\lambda_2 &lt;0\\), \\(|\\lambda_1| &gt; |\\lambda_2\\) 의 경우 이차형식 \\(s(\\bm x, \\bm B)\\) 는 정상점이 안장점(saddle point)이 되며 \\(w_2\\) 축으로는 반응값이 감소하게 되고 \\(w_1\\) 축으로는 반응값이 증가하게 된다. 또한 \\(w_2\\) 에 비하여 \\(w_1\\) 축으로 반응의 변화가 급하다. \\(\\lambda_1 = - 3\\), \\(\\lambda_2 =1\\) 인 경우 2차 형식의 형태는 다음과 같다. w1 &lt;- w2 &lt;- seq(-1, 1, length= 30) s &lt;- outer(w1, w2 ,quad, -3, 1) persp3D(w1, w2, s, main=&quot;이차형식: l1 &gt; 0 &gt; l2&quot;, zlab = &quot;s&quot;, theta = 40, phi = 15) \\(\\lambda_i \\approx 0\\) 인 경우 반응표면 체계가 능선 체계(ridge system)이라고 한다. 능선 체계에서는 최적점이 무수히 많은 정상 능선 체계(stationary ridge system)와 능선이 한 방향ㅇ으로 계속 증가하는 형태(rising ridge system)으로 나뉜다. 올라가는 능선 체계에서는 현제의 실험 영역에서 최적점이 없기 때문에 실헌 영역을 변경하여 다시 실험을 진행해야 한다. \\(\\lambda_1 = 0\\), \\(\\lambda_2 =1\\) 인 경우 2차 형식의 형태는 다음과 같다. w1 &lt;- w2 &lt;- seq(-1, 1, length= 30) s &lt;- outer(w1, w2 ,quad, 0, 1) persp3D(w1, w2, s, main=&quot;이차형식: l1 = 0 &quot;, zlab = &quot;s&quot;, theta = 40, phi = 15) "],["matrixalgebra.html", "부록 A: 행렬 기초 이론 A.1 직교행렬 A.2 고유치와 고유벡터 A.3 대칭행렬의 대각화 A.4 이차형식 A.5 멱등행렬", " 부록 A: 행렬 기초 이론 이 장에서는 회귀분석의 이론 전개에 필요한 행렬과 선형 대수의 기초에 대하여 알아볼 것이다. \\(\\bm A = \\{ a_{ij} \\}\\)를 \\(n \\times n\\) 정방행렬 이라고 하자. \\(\\bm A^t\\)는 행렬의 전치(transpose)를 나타낸다. \\(\\bm A\\)의 행렬식(determinant)을 \\(det(\\bm A)=|\\bm A|\\)로 표기한다. 만약 행렬 \\(\\bm A\\)가 대각행렬(diagonal metrix)이면 \\(|\\bm A|\\)는 행렬의 대각원소의 곱이다 (\\(| \\bm A| =\\prod a_{ii}\\)). 두 행렬의 곱의 행렬식은 각 행렬의 행렬식의 곱이다. \\[ |\\bm A \\bm B | = | \\bm A| |\\bm B| \\] 행렬의 대각합을 \\(tr(\\bm A)\\)로 표시한다. 행렬의 곱셈은 일반적으로 교환법칙이 성립하지 않지만 대각합의 연산은 교환법칙이 성립한다. \\[ tr(\\bm A \\bm B) = tr( \\bm B \\bm A) \\] 만약 행렬 \\(\\bm A\\)의 역행렬(inverse metrix)가 존재하면 \\(\\bm A^{-1}\\)로 표시하며 다음을 만족하는 행렬이다. \\[ \\bm A \\bm A^{-1} = \\bm A^{-1} = \\bm I \\] 정방행렬의 역행렬 \\(\\bm A^{-1}\\) 이 존재할 다음 조건들은 모두 동치이다(equivalent conditions). \\(|\\bm A| \\ne 0\\) \\(rank(\\bm A) = n\\) \\(i\\)번째 단위벡터 \\(\\bm e_i\\)를 정의하자. 단위벡터 \\(\\bm e_i\\)는 \\(n\\)- 차원 벡터로서 \\(i\\)번째 원소만 1이고 나머지는 0인 벡터이다. \\[ \\bm e_i = [0 ~~0 ~~\\dots~~ 0 ~~ 1 ~~ 0 ~~ \\dots ~~ 0 ]^t \\] 즉 \\(n\\)-차원 항등행렬 \\(\\bm I\\)는 n개의 단위벡터들을 모아놓은 것이다. \\[ \\bm I = [ \\bm e_1 ~~ \\bm e_2 ~~ \\dots ~~ \\bm e_n ] \\] A.1 직교행렬 만약 정방행렬 \\(\\bm P\\)가 다음과 같은 조건을 만족하면 직교행렬(orthogonal matrix)라고 부른다. \\[ \\bm P \\bm P^t = \\bm P^t \\bm P = \\bm I \\] 따라서 \\(\\bm P^{-1} = \\bm P^t\\)이다. 만약 \\(\\bm P\\)가 직교행렬이면 다음과 같은 성질을 가진다. \\(| \\bm P | = \\pm 1\\) , 왜냐하면 \\[ | \\bm P \\bm P^t | = | \\bm P | |\\bm P^t | = | \\bm P|^2 = |\\bm I| =1 \\] 임의의 정방행렬 \\(\\bm A\\)에 대하여 다음이 성립한다. \\[ tr(\\bm P \\bm A \\bm P^t) = tr(\\bm A \\bm P^t \\bm P) = tr(\\bm A) \\] A.2 고유치와 고유벡터 \\(n\\)차원의 정방행렬 \\(\\bm A\\)에 대하여 다음 \\(\\lambda\\)에 대한 \\(n\\)차 다항 방정식을 만족하는 해들을 고유치(eigen values)라고 하고 \\(\\lambda_1, \\lambda_2, \\dots , \\lambda_n\\)이라고 표기한다. \\[ | \\lambda \\bm I - \\bm A | = 0 \\] 각 고유치 \\(\\lambda_i\\)에 대하여 다음과 같은 방정식을 만족하는 0이 아닌 벡터 \\(\\bm x_i\\) 를 \\(\\lambda_i\\) 에 대응하는 고유벡터(eigen vector) 라고 한다. \\[ \\bm A \\bm x_i = \\lambda_i \\bm x_i \\] 행렬 \\(\\bm A\\)의 고유치가 모두 0이 아닌 조건은 역행렬이 존재하는, 즉 행렬 \\(\\bm A\\)가 정칙행렬(nonsungular metrix)이라는 조건과 동치이다. 대각행렬 \\(\\bm D = \\{ d_{ii} \\}\\) 의 고유치는 대각원소가 된다. 즉 \\[ | \\lambda \\bm I - \\bm D | = \\prod_{i=1}^n (\\lambda - d_{ii}) =0 \\] 행렬 \\(\\bm P\\)가 직교행렬이라면 \\(\\bm P \\bm A \\bm P^t|\\)와 \\(\\bm A\\)는 동일한 고유치를 가진다. 왜냐하면 \\[ | \\lambda \\bm I - \\bm P \\bm A \\bm P | = |\\lambda \\bm P \\bm P^t - \\bm P \\bm A \\bm P^t| = |\\bm P|^2 | \\lambda \\bm I - \\bm A | \\] A.3 대칭행렬의 대각화 \\(n\\)차원 대칭행렬 \\(\\bm A\\) 에 대하여 직교행렬 \\(\\bm P\\)가 존재하여 다음과 같은 분해가 가능하다. \\[\\begin{equation} \\bm P^t \\bm A \\bm P = \\bm \\Lambda = diag(\\lambda_1, \\lambda_2, \\dots, \\lambda_n) \\tag{A.1} \\end{equation}\\] 식 (A.1)의 분해에서 \\(\\lambda_i\\)는 행렬 \\(\\bm A\\)의 고유치이며 행렬 \\(\\bm P\\)의 \\(i\\) 번째 열은 대응하는 고유벡터 \\(\\bm p_i\\) 로 구성되어 있다. \\[ \\bm P = [ \\bm p_1~~ \\bm p_2 ~~ \\dots ~~ \\bm p_n ] \\] 이제 위의 분해를 증명해 보자. 고유치 \\(\\lambda_i\\) 와 대응하는 고유벡터 \\(\\bm p_i\\)의 정의에 따라서 다음과 같은 \\(n\\)개의 식을 얻을 수 있고 \\[ \\bm A \\bm p_i = \\lambda_i \\bm p_i , \\quad i=1,2,3\\dots, n \\] 위의 식을을 합쳐서 표기하면 다음과 같은 식을 얻으며 이는 식 (A.1)를 의미한다. \\[ \\bm A \\bm P = \\bm P \\bm \\Lambda \\] 식 (A.1)를 다시 쓰면 다음과 같은 스펙트럴 분해(spectral decomposition)를 얻는다. \\[\\begin{equation} \\bm A = \\bm P \\bm \\Lambda \\bm P^t = \\sum_{i=1}^n \\lambda_i \\bm p_i \\bm {p}_i^t \\tag{A.2} \\end{equation}\\] 참고로 다음의 유용한 두 식을 기억하자. \\[ tr(\\bm A) = \\sum_i \\lambda_i ,\\quad |\\bm A| = \\prod_i \\lambda_i \\] A.4 이차형식 \\(n\\)-차원 벡터 \\(\\bm x^t=[x_1,x_2,\\dots,x_n]\\)과 대칭행렬 \\(\\bm A\\)에 대하여 이차형식(quadratic form)은 다음과 같이 정의된다. \\[\\begin{equation} Q_A(\\bm x) = \\bm x^t \\bm A \\bm x =\\sum_{i=1}^n \\sum_{j=1}^n a_{ij} x_i x_j \\tag{A.3} \\end{equation}\\] 이차형식의 정의에서 반드시 행렬 \\(\\bm A\\)를 대칭행렬로 정의하지 않아도 되지만 임의의 행렬에 대하여 이차형식의 값이 동일한 대칭행렬이 존재하기 때문에 정의에서 이차형식으로 국한하는 것이 일반적이다. 정의 A.1 (양정치행렬) 이차형식 \\(Q_A(\\bm x) = \\bm x^t \\bm A \\bm x\\)가 영벡터가 아닌 모든 벡터 \\(\\bm x\\)에 대하여 0 보다 크면 \\[ \\bm x^t \\bm A \\bm x &gt;0 \\] \\(\\bm A\\)를 양정치(positive definite)라고 부른다. 만약 이차형식 \\(Q_A(\\bm x) = \\bm x^t \\bm A \\bm x\\)가 영벡터가 아닌 모든 벡터 \\(\\bm x\\)에 대하여 0 보다 크거나 같다면 \\[ \\bm x^t \\bm A \\bm x \\ge 0 \\] \\(\\bm A\\)를 양반정치(positive semi-definite)라고 부른다. 정칙행렬 \\(\\bm B\\)에 대하여 다음과 같은 선형변환을 고려하자. \\[ \\bm x = \\bm B \\bm y \\text{ or } \\bm y = \\bm {B}^{-1} \\bm x \\] 벡터 \\(\\bm x\\)로 정의된 이차형식은 벡터 \\(\\bm y\\)의 형태로 다음과 같이 변환할 수 있다. \\[ Q(\\bm x) = \\bm x^t \\bm A \\bm x = \\bm y^t \\bm B^t \\bm A \\bm B \\bm y =Q^*(\\bm y) \\] 이차형식의 성질은 정칙 선형변환에서 유지된다. 즉 행렬 \\(\\bm A\\)가 양(반)정치 행렬이고 행렬 \\(\\bm B\\)가 정칙행렬이면 행렬 \\(\\bm B^t \\bm A \\bm B\\)도 양(반)정치 행렬이다. 대칭행렬의 분해 (A.1)를 이용하면 다음과 같은 이차형식의 분해를 얻을 수 있다. \\[\\begin{equation} Q(\\bm x) = \\bm x^t \\bm A \\bm x = \\bm x^t \\bm P \\bm \\Lambda \\bm P^t \\bm x = \\bm y^t \\bm \\Lambda \\bm y= \\sum_{i=1}^n \\lambda_i y_i^2 \\tag{A.4} \\end{equation}\\] 이차형식의 분해식 (A.4) 를 보면 행렬 \\(\\bm A\\)의 모든 고유치가 0보다 크면 양정치 임을 알 수 있다. 또한 모든 고유치가 0보다 크거나 같으면 양반정치 임을 알 수 있다. 또한 \\(rank(\\bm A) = rank(\\bm \\Lambda)\\)이며 이는 0이 아닌 고유치의 개수가 행렬 \\(\\bm A\\)의 계수(rank)임을 알 수 있다. A.5 멱등행렬 \\(n\\)-차원 행렬 \\(\\bm A\\) 가 다음과 같은 성질을 가지면 멱등행렬(idenpotent matrix)라고 부른다. \\[ \\bm A^2 = \\bm A \\bm A = \\bm A \\] 멱등행렬은 다음과 같은 성질을 가지고 있다. 멱등행렬의 고유치는 0 또는 1이다. \\(tr(\\bm A) =rank(\\bm A)\\) 멱등행렬은 양반정치 행렬이다. \\(\\bm A\\) 멱등행렬이면 \\(\\bm I - \\bm A\\)도 멱등행렬이다. 특별히 대칭인 멱등행렬을 사영행렬(또는 투영행렬, projection matrix)라고 부른다. "]]
